class Solution {
public:
    vector<string> generateParenthesis(int n) {
        string cur = "";
        generate(n, cur, n, n);
        return res;
    }
    private:
    vector<string> res;
    void generate(int n, string cur, int leftcnt, int rightcnt){
        if(leftcnt == 0 && rightcnt == 0){
            res.push_back(cur);
            return;
        }
        //if(leftcnt > rightcnt) return;
        if(leftcnt>0) generate(n,cur+"(",leftcnt-1,rightcnt);
        if(rightcnt>0 && rightcnt>leftcnt) generate(n,cur+")",leftcnt,rightcnt-1);
    }
};
//loop
/*
http://blog.csdn.net/yutianzuijin/article/details/13161721
该问题解的个数就是卡特兰数，但是现在不是求个数，而是要将所有合法的括号排列打印出来。

       该问题和《编程之美》的买票找零问题一样，通过买票找零问题我们可以知道，针对一个长度为2n的合法排列，第1到2n个位置都满足如下规则：左括号的个数大于等于右括号的个数。所以，我们就可以按照这个规则去打印括号：假设在位置k我们还剩余left个左括号和right个右括号，如果left>0，则我们可以直接打印左括号，而不违背规则。能否打印右括号，我们还必须验证left和right的值是否满足规则，如果left>=right，则我们不能打印右括号，因为打印会违背合法排列的规则，否则可以打印右括号。如果left和right均为零，则说明我们已经完成一个合法排列，可以将其打印出来
*/
